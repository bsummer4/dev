export HISTSIZE=1000000
export SHELL=$(which bash)
export EDITOR=$(which vim)
export VISUAL=$EDITOR
export PAGER=$(which less)
export TERM=xterm-256color
export INPUTRC=$HOME/.inputrc

### Nix
# NIX_PATH="nixpkgs=$HOME/nixpkgs:$NIX_PATH"

### Go
export GOROOT=/usr/local/go
export GOPATH=$HOME/.go
export GOBIN=$GOPATH/bin

### Java
export SCALA_HOME=/usr/local/scala-2.11.4/
export GRADLE_HOME=/usr/local/gradle
export ANDROID_HOME=/home/ben/hack/android/android-sdk-linux
export GTK_IM_MODULE="xim" # Make GTK use my ~/.XCompose
export XDG_CONFIG_HOME=$HOME/.config
export XDG_DATA_HOME=$HOME/.share
export XDG_CACHE_HOME=$HOME/tmp/cache
export CLOJURESCRIPT_HOME=$HOME/hack/clojurescript

### PATH
export PATH=$GOROOT/bin:$PATH
export PATH=/opt/ghc/7.8.3/bin:/opt/cabal/1.20/bin:$PATH
export PATH=$ANDROID_HOME/tools:$PATH
export PATH=/home/ben/.gem/ruby/2.1.0/bin:$PATH
export PATH=/home/ben/hack/fay/.cabal-sandbox/bin:$PATH
export PATH=$HOME/dev/bin:$HOME/bin:$HOME/.bin:$HOME/.local/bin:$PATH
export PATH=$HOME/.hstools/.cabal-sandbox/bin:$HOME/.cabal/bin:$HOME/repo/dotfiles/bin:$PATH
export PATH=$PATH:$HOME/npm/bin
export PATH=/usr/local/Elm-Platform/0.13/bin:$PATH
export PATH=/usr/local/gradle/bin:$PATH
export PATH=/usr/local/heroku/bin:$PATH
export PATH=/usr/local/scala-2.11.4/bin:$PATH
export PATH=$GOBIN:$PATH

### Bash
case $(expr $RANDOM % 9) in
 0) export PS1="∀";;
 1) export PS1="∃";;
 2) export PS1="█";;
 3) export PS1="λ";;
 4) export PS1="◣";;
 5) export PS1="░";;
 6) export PS1="▞";;
 7) export PS1="▻";;
 *) export PS1="◗";;
esac

# alias vim=fj
alias :a=A
alias :e=v
alias .=pwd
alias ..="cd ..; pwd"
alias ...="cd ../..; pwd"
alias ....="cd ../../..; pwd"
alias .....="cd ../../../..; pwd"

function l { git ls-files | sort -u | column; }
function ll { git ls-files | sed 's|.*/||' | sort -u | column; }
function s { (git ls-files; find . -type f) | grep "$1" | sed 1q; }
function ss { for n in $*; do git ls-files | grep "$n"; done | sort -u | uniq; }

function jr {
  x=$(curl -X$1 -H 'Content-Type: application/json' -d "$3" $2)

  echo "$x" | jq .
  [ $? = 0 ] || echo "$x"
}

function GET { jr GET "$1" ""; }
function POST { jr POST "$1" "$2"; }
function PUT { jr PUT "$1" "$2"; }
function DELETE { jr DELETE "$1" ""; }
function LIST { jr LIST "$1" ""; }
function PATCH { jr PATCH "$1" "$2"; }

function v {
	f=$(for name in $*; do
		if [ -e "$name" ]; then echo $name; else s "$name"; fi
		done);
	(cd $(dirname $f); $EDITOR $(basename $f) && touch $(basename f))
}

function vv {
    $EDITOR $(for n in $*; do git ls-files |grep "$n"; done |
                  sort -u |
                  uniq)
}

set -o vi

source $HOME/.nix-profile/etc/profile.d/nix.sh
export PATH=/usr/local/ghc/bin:$PATH
export PATH=/usr/local/bin:$PATH

# OSX Stuff
MANPATH="/usr/local/opt/coreutils/libexec/gnuman:$MANPATH"
MANPATH="/usr/local/opt/gnu-sed/libexec/gnuman:$MANPATH"
PATH="/usr/local/opt/coreutils/libexec/gnubin:$PATH"
PATH="/usr/local/opt/gnu-sed/libexec/gnubin:$PATH"
PATH="/usr/local/opt/gnu-tar/libexec/gnubin:$PATH"

# nvm etc
export NVM_DIR=~/.nvm
nvm_init() {
  source $(brew --prefix nvm)/nvm.sh
  nvm use v5.7.0
}

alias gf='git ls-files'
alias gs='git status'
alias gc='git checkout'
alias gitup='git push origin'

hdr () {
    word="$1"
    chars=${#word}
    remain=$((108 - words))
    prechars=$((remain/2))
    postchars=$((remain-(prechars+chars)))
    for i in $(seq $prechars); do echo -n '█'; done
    echo -n '' $word ''
    for i in $(seq $postchars); do echo -n '█'; done
    echo
}


alias app='cd ~/wagon/app; hdr app; git status; hdr app;'
alias wrapper='cd ~/wagon/atom-wrapper; hdr atom-wrapper; git status; hdr atom-wrapper;'
alias client='cd ~/wagon/client; hdr client; git status; hdr client;'
alias common='cd ~/wagon/common; hdr common; git status; hdr common;'
alias etl='cd ~/wagon/etl; hdr etl; git status; hdr etl;'
alias images='cd ~/wagon/images; hdr images; git status; hdr images;'
alias server='cd ~/wagon/server; hdr server; git status; hdr server;'
alias util='cd ~/wagon/util; hdr util; git status; hdr util;'
alias wagon='cd ~/wagon; hdr wagon; git status; hdr wagon;'

function gitup () {
  if [ "$#" = 0 ]
  then curbr="$(git rev-parse --abbrev-ref HEAD)"
       echo "Current branch is $curbr. Confirm!"
       if [ -n "$curbr" ] && read
       then git push -u origin "$curbr" "$@"
       else echo 'Backing out!'
       fi
  fi
}

function W () {
  pushd ~/wagon
  cmd="$1"
  shift
  "./scripts/$cmd" "$@"
  popd
}

function G () {
  pushd ~/wagon
  ./scripts/multi git "$@"
  popd
}

notesfile=~/Desktop/NOTES

function note () {
  if [ "$#" = 0 ]
  then note $(pbpaste | head -n 1)
  else echo "$@" >> "$notesfile"
  fi
}

function notes () {
  test -e "$notesfile" && cat "$notesfile"
}

alias N=note

alias vim=$(which vi)
alias vi=$(which vi)
alias IDE="$(which vim); while sleep 0.2; do $(which vim); done"

export PATH="$HOME/.local/bin:$PATH"

eval $(ssh-agent)

if [ -e /Users/benjamin/.nix-profile/etc/profile.d/nix.sh ]; then
  . /Users/benjamin/.nix-profile/etc/profile.d/nix.sh
fi

alias flow=./node_modules/.bin/flow

function repo () {
    case $# in
      0) cd "$HOME/Dropbox/github.com/bsummer4";;
      1) cd "$HOME/Dropbox/github.com/bsummer4/$1";;
      2) cd "$HOME/Dropbox/github.com/$1/$2";;
      3) cd "$HOME/Dropbox/$1/$2/$3";;
    esac
}

export PATH=$HOME/.local/bin:$PATH
